{"version":3,"sources":["../src/app/lib/directives/codemirror.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,UAAA,EAAY,YAAA,EAAc,KAAA,EAA0B,MAAA,EAAsB,MAAA,eAAA,CAAA;AAC7F,OAAO,EAA0C,YAAA,EAAa,MAAA,kBAAA,CAAA;AAC9D,MAEC;IAOD;;OAEG;IACH,YAAsB,OAAS;QAAT,YAAA,GAAA,OAAA,CAAS;QAT5B,WAAM,GAEwB;YAD7B,WAAW,EAEE,IAAA;YADb,IAAI,EAEE,YAAA;SADP,CAEC;QADD,aAAQ,GAEG,IAAI,YAAA,EAAiD,CAAG;IAG5B,CAAA;IAC1C;;OAEG;IACH,QAFG;QAGC,IAAI,CAFC,SAAC,GAAW,YAAA,CAAa,IAAC,CAAI,OAAC,CAAO,aAAC,EAAc,IAAA,CAAK,MAAC,CAAM,CAAC;QAGvE,IAAI,CAFC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,OAAC,CAAO,CAAC;QAGtC,IAAI,CAFC,SAAC,CAAS,EAAC,CAAE,QAAC,EAAS,CAAA,UAAE,EAAW,KAAA,KAAU,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,EAAC,cAAC,EAAe,UAAA,EAAY,OAAA,EAAS,KAAA,EAAM,CAAC,CAAC,CAAC;IAGvH,CAAC;IACH;;;OAGG;IACH,WALG,CAAA,OAAA;QAOC,EAAE,CAAC,CAAC,IALC,CAAI,SAAC,CAAS,CAAC,CAAA;YAMlB,EAAE,CAAC,CAAC,OALC,CAAO,OAAC,CAAO,CAAC,CAAA;gBAMnB,IAAI,CALC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,OAAC,CAAO,CAAC;YAMxC,CAAC;YACD,EAAE,CAAC,CAAC,OALC,CAAO,MAAC,CAAM,CAAC,CAAA;gBAMlB,MAAM,CALC,IAAC,CAAI,IAAC,CAAI,MAAC,CAAM,CAAC,GAAC,CAAG,CAAC,IAAI,IAAA,CAAK,SAAC,CAAS,SAAC,CAAS,CAAC,EAAE,IAAA,CAAK,MAAC,CAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAMjF,CAAC;QACH,CAAC;IACH,CAAC;IACH;;OAEG;IACH,UAPG;QAQC,MAAM,CAPC,IAAA,CAAK,SAAC,CAAS,QAAC,EAAQ,CAAE;IAQnC,CAAC;IACH;;;;OAIG;IACH,SAXG,CAAA,GAAA,EAAA,KAAA;QAYC,IAAI,CAXC,SAAC,CAAS,SAAC,CAAS,GAAC,EAAI,KAAA,CAAM,CAAC;IAYvC,CAAC;;AATI,8BAAA,GAAoC;IAY3C,EAXE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAYvB,QAAQ,EAXE,cAAA;aAYX,EAXC,EAAG;CAYJ,CAXC;AAYF;;GAEG;AAZF,kCAAA,GAAA,MAAA;IAcD,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,CAAC;AAZK,kCAAA,GAAyD;IAchE,SAAS,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAc5B,QAAQ,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAc3B,UAAU,EAbE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAc7B,CAbC;AAgBF;IACA,gBAAgB;IAChB,mBAAmB,CAAC,UAAU,CAAC;IAC/B;;;OAGG;IACH,mBAAmB,CAAC,cAAc,CAAC;IACnC,gBAAgB;IAChB,mBAAmB,CAAC,cAAc,CAAC;IACnC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC;IACrC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACvC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC;IACxC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;AACtC,CAAC","file":"codemirror.directive.js","sourceRoot":"","sourcesContent":["import {Directive, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {EditorFromTextArea, EditorConfiguration, fromTextArea} from 'codemirror/index';\nexport class CodeMirrorDirective implements OnInit, OnChanges {\n\n   content: string;\n   config: EditorConfiguration = {\n    lineNumbers: true,\n    mode: 'javascript'\n  };\n   onChange = new EventEmitter<{editorInstance: any, changes: any}>();\n  editorRef: EditorFromTextArea;\n/**\n * @param {?} element\n */\nconstructor(private element: ElementRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    this.editorRef = fromTextArea(this.element.nativeElement, this.config);\n    this.editorRef.setValue(this.content);\n    this.editorRef.on('change', (cmInstance, event) => this.onChange.emit({editorInstance: cmInstance, changes: event}));\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n\n    if (this.editorRef) {\n      if (changes.content) {\n        this.editorRef.setValue(this.content);\n      }\n      if (changes.config) {\n        Object.keys(this.config).map(k => this.editorRef.setOption(k, this.config[k]));\n      }\n    }\n  }\n/**\n * @return {?}\n */\ngetContent(): string {\n    return this.editorRef.getValue();\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetOption(key: string, value: any) {\n    this.editorRef.setOption(key, value);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[codemirror]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: Input },],\n'config': [{ type: Input },],\n'onChange': [{ type: Output },],\n};\n}\n\nfunction CodeMirrorDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCodeMirrorDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCodeMirrorDirective.ctorParameters;\n/** @type {?} */\nCodeMirrorDirective.propDecorators;\n/** @type {?} */\nCodeMirrorDirective.prototype.content;\n/** @type {?} */\nCodeMirrorDirective.prototype.config;\n/** @type {?} */\nCodeMirrorDirective.prototype.onChange;\n/** @type {?} */\nCodeMirrorDirective.prototype.editorRef;\n/** @type {?} */\nCodeMirrorDirective.prototype.element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}